/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Distributor, DistributorInterface } from "../Distributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IDistributor[]",
        name: "_distributors",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "distributors",
    outputs: [
      {
        internalType: "contract IDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102d23803806102d28339818101604052602081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825186602082028301116401000000008211171561008557600080fd5b82525081516020918201928201910280838360005b838110156100b257818101518382015260200161009a565b5050505091909101604052505082516100d492506000915060208401906100db565b505061015f565b828054828255906000526020600020908101928215610130579160200282015b8281111561013057825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906100fb565b5061013c929150610140565b5090565b5b8082111561013c5780546001600160a01b0319168155600101610141565b6101648061016e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806350b492ba1461003b578063e4fc6b6d14610074575b600080fd5b6100586004803603602081101561005157600080fd5b503561007e565b604080516001600160a01b039092168252519081900360200190f35b61007c6100a5565b005b6000818154811061008b57fe5b6000918252602090912001546001600160a01b0316905081565b60005b60005481101561012b57600081815481106100bf57fe5b60009182526020822001546040805163e4fc6b6d60e01b815290516001600160a01b039092169263e4fc6b6d9260048084019382900301818387803b15801561010757600080fd5b505af115801561011b573d6000803e3d6000fd5b5050600190920191506100a89050565b5056fea264697066735822122034900086886ba4550d8b3d6d8bc00c216825887fc2e0cc2d60a7bdd3daec92ce64736f6c634300060c0033";

type DistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Distributor__factory extends ContractFactory {
  constructor(...args: DistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _distributors: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Distributor> {
    return super.deploy(_distributors, overrides || {}) as Promise<Distributor>;
  }
  getDeployTransaction(
    _distributors: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_distributors, overrides || {});
  }
  attach(address: string): Distributor {
    return super.attach(address) as Distributor;
  }
  connect(signer: Signer): Distributor__factory {
    return super.connect(signer) as Distributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorInterface {
    return new utils.Interface(_abi) as DistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Distributor {
    return new Contract(address, _abi, signerOrProvider) as Distributor;
  }
}
